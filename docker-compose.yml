services:
  postgres_db:
    image: postgres:16-alpine
    container_name: my_scaffold_postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: scaffold_user
      POSTGRES_PASSWORD: scaffold_password
      POSTGRES_DB: scaffold_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_scaffold_network

  # Shared UI Components Storybook
  web_ui:
    build:
      context: .
      dockerfile: ./packages/web-ui/Dockerfile
    container_name: my_scaffold_web_ui
    ports:
      - "6006:6006" # Storybook default port
    volumes:
      - ./packages/web-ui:/app/packages/web-ui
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml:ro
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:ro
      - ./package.json:/app/package.json:ro
      - /app/node_modules
      - /app/packages/web-ui/node_modules
    working_dir: /app/packages/web-ui
    networks:
      - my_scaffold_network
    command: pnpm dev

  web_site:
    build:
      context: .
      dockerfile: ./apps/web_site/Dockerfile
    container_name: my_scaffold_web_site
    ports:
      - "3000:3000" # Host:Container (Using port 3000 for Next.js)
    volumes:
      - ./apps/web_site:/app/apps/web_site
      - ./packages:/app/packages:ro # Mount shared packages
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml:ro
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:ro
      - ./package.json:/app/package.json:ro
      - /app/node_modules # Isolate node_modules in container
      - /app/apps/web_site/node_modules
    working_dir: /app/apps/web_site
    networks:
      - my_scaffold_network
    depends_on:
      - web_ui
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true # Enable hot reloading in Docker
    # env_file:
    #   - ./apps/web_site/.env

  web_app:
    build:
      context: .
      dockerfile: ./apps/web_app/Dockerfile
    container_name: my_scaffold_web_app
    ports:
      - "3001:3001" # Host:Container
    volumes:
      - ./apps/web_app:/app/apps/web_app
      - ./packages:/app/packages:ro # Mount shared packages
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml:ro
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:ro
      - ./package.json:/app/package.json:ro
      - /app/node_modules
      - /app/apps/web_app/node_modules
    working_dir: /app/apps/web_app
    networks:
      - my_scaffold_network
    depends_on:
      - web_ui
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true # Enable hot reloading in Docker
    # env_file:
    #   - ./apps/web_app/.env

  web_admin:
    build:
      context: .
      dockerfile: ./apps/web_admin/Dockerfile
    container_name: my_scaffold_web_admin
    ports:
      - "3002:3002" # Host:Container
    volumes:
      - ./apps/web_admin:/app/apps/web_admin
      - ./packages:/app/packages:ro # Mount shared packages
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml:ro
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:ro
      - ./package.json:/app/package.json:ro
      - /app/node_modules
      - /app/apps/web_admin/node_modules
    working_dir: /app/apps/web_admin
    networks:
      - my_scaffold_network
    depends_on:
      - web_ui
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true # Enable hot reloading in Docker
    # env_file:
    #   - ./apps/web_admin/.env

  gateway_service:
    build:
      context: ./services/gateway_service
      dockerfile: Dockerfile
    container_name: my_scaffold_gateway_service
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db # Or other services it directly needs at startup
      - user_service
    volumes:
      - ./services/gateway_service:/app
      # Mount for generated contracts if needed during development
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network
    environment:
      - USER_SERVICE_URL=my_scaffold_user_service:50051
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1 # For real-time logs

  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    container_name: my_scaffold_user_service
    ports:
      - "50051:50051" # Expose gRPC port
    depends_on:
      - postgres_db
    volumes:
      - ./services/user_service:/app
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network
    environment:
      - DATABASE_URL=postgresql://scaffold_user:scaffold_password@postgres_db:5432/scaffold_db
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1 # For real-time logs

  notification_service:
    build:
      context: ./services/notification_service
      dockerfile: Dockerfile
    container_name: my_scaffold_notification_service
    ports:
      - "8002:8000"
    depends_on:
      - postgres_db # If it needs db, or remove
    volumes:
      - ./services/notification_service:/app
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1 # For real-time logs

  ai_service:
    build:
      context: ./services/ai_service
      dockerfile: Dockerfile
    container_name: my_scaffold_ai_service
    ports:
      - "8003:8000"
    volumes:
      - ./services/ai_service:/app
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1 # For real-time logs

volumes:
  postgres_data:

networks:
  my_scaffold_network:
    driver: bridge
