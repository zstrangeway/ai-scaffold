version: "3.8"

services:
  postgres_db:
    image: postgres:16-alpine
    container_name: my_scaffold_postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: scaffold_user
      POSTGRES_PASSWORD: scaffold_password
      POSTGRES_DB: scaffold_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_scaffold_network

  web_site:
    build:
      context: ./apps/web_site
      dockerfile: Dockerfile # Placeholder, needs to be created
    container_name: my_scaffold_web_site
    ports:
      - "3000:5173" # Host:Container (Vite default is 5173)
    volumes:
      - ./apps/web_site:/app
      - /app/node_modules # Isolate node_modules in container
    networks:
      - my_scaffold_network
    # env_file:
    #   - ./apps/web_site/.env

  web_app:
    build:
      context: ./apps/web_app
      dockerfile: Dockerfile # Placeholder, needs to be created
    container_name: my_scaffold_web_app
    ports:
      - "3001:5173" # Host:Container
    volumes:
      - ./apps/web_app:/app
      - /app/node_modules
    networks:
      - my_scaffold_network
    # env_file:
    #   - ./apps/web_app/.env

  web_admin:
    build:
      context: ./apps/web_admin
      dockerfile: Dockerfile # Placeholder, needs to be created
    container_name: my_scaffold_web_admin
    ports:
      - "3002:5173" # Host:Container
    volumes:
      - ./apps/web_admin:/app
      - /app/node_modules
    networks:
      - my_scaffold_network
    # env_file:
    #   - ./apps/web_admin/.env

  gateway_service:
    build:
      context: ./services/gateway_service
      dockerfile: Dockerfile
    container_name: my_scaffold_gateway_service
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db # Or other services it directly needs at startup
      - user_service
    volumes:
      - ./services/gateway_service:/app
      # Mount for generated contracts if needed during development
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network
    environment:
      - USER_SERVICE_URL=my_scaffold_user_service:50051

  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    container_name: my_scaffold_user_service
    ports:
      - "50051:50051" # Expose gRPC port
    depends_on:
      - postgres_db
    volumes:
      - ./services/user_service:/app
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network
    environment:
      - DATABASE_URL=postgresql://scaffold_user:scaffold_password@postgres_db:5432/scaffold_db

  notification_service:
    build:
      context: ./services/notification_service
      dockerfile: Dockerfile
    container_name: my_scaffold_notification_service
    ports:
      - "8002:8000"
    depends_on:
      - postgres_db # If it needs db, or remove
    volumes:
      - ./services/notification_service:/app
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network

  ai_service:
    build:
      context: ./services/ai_service
      dockerfile: Dockerfile
    container_name: my_scaffold_ai_service
    ports:
      - "8003:8000"
    volumes:
      - ./services/ai_service:/app
      - ./packages/api-contracts/generated/py:/app/generated_contracts/py:ro
    networks:
      - my_scaffold_network

volumes:
  postgres_data:

networks:
  my_scaffold_network:
    driver: bridge
