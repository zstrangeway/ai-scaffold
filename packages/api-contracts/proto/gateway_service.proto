// API Contracts for the Gateway Service

syntax = "proto3";

package gateway_service;

// Gateway Service API
service GatewayService {
    // Authentication endpoints
    rpc SignIn(SignInRequest) returns (SignInResponse);
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
    
    // User management endpoints
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
}

// Authentication Messages
message SignInRequest {
    string email = 1;
    string password = 2;
}

message SignInResponse {
    bool success = 1;
    string access_token = 2;
    string refresh_token = 3;
    User user = 4;
    string error_message = 5;
}

message RegisterRequest {
    string name = 1;
    string email = 2;
    string password = 3;
}

message RegisterResponse {
    bool success = 1;
    string access_token = 2;
    string refresh_token = 3;
    User user = 4;
    string error_message = 5;
}

message ValidateTokenRequest {
    string access_token = 1;
}

message ValidateTokenResponse {
    bool valid = 1;
    User user = 2;
    string error_message = 3;
}

message RefreshTokenRequest {
    string refresh_token = 1;
}

message RefreshTokenResponse {
    bool success = 1;
    string access_token = 2;
    string refresh_token = 3;
    string error_message = 4;
}

// Get User Request
message GetUserByIdRequest {
    string id = 1;
}

// Get User Response
message GetUserByIdResponse {
    User user = 1;
}

// Get User By Email Request
message GetUserByEmailRequest {
    string email = 1;
}

// Get User By Email Response
message GetUserByEmailResponse {
    User user = 1;
}

// Create User Request
message CreateUserRequest {
    string name = 1;
    string email = 2;
}

// Create User Response
message CreateUserResponse {
    User user = 1;
}

// Update User Request
message UpdateUserRequest {
    string id = 1;
    string name = 2;
    string email = 3;
}

// Update User Response
message UpdateUserResponse {
    User user = 1;
}

// Delete User Request
message DeleteUserRequest {
    string id = 1;
}

// Delete User Response
message DeleteUserResponse {
    User user = 1;
}

// List Users Request
message ListUsersRequest {
    int32 page = 1;
    int32 limit = 2;
}

// List Users Response
message ListUsersResponse {
    repeated User users = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
}

// User Message
message User {
    string id = 1;
    string name = 2;
    string email = 3;
    string created_at = 4;
    string updated_at = 5;
}