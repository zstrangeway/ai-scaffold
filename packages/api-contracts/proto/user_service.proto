// API Contracts for the User Service

syntax = "proto3";

package user_service;

// User Service API
service UserService {
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc CreateUserWithPassword(CreateUserWithPasswordRequest) returns (CreateUserWithPasswordResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc UpdateUserPassword(UpdateUserPasswordRequest) returns (UpdateUserPasswordResponse);
    rpc VerifyUserPassword(VerifyUserPasswordRequest) returns (VerifyUserPasswordResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

// Get User Request
message GetUserByIdRequest {
    string id = 1;
}

// Get User Response
message GetUserByIdResponse {
    User user = 1;
}

// Get User By Email Request
message GetUserByEmailRequest {
    string email = 1;
}

// Get User By Email Response
message GetUserByEmailResponse {
    User user = 1;
}

// Create User Request (without password - for basic user creation)
message CreateUserRequest {
    string name = 1;
    string email = 2;
}

// Create User Response
message CreateUserResponse {
    User user = 1;
}

// Create User With Password Request (for authentication-enabled users)
message CreateUserWithPasswordRequest {
    string name = 1;
    string email = 2;
    string password = 3;
}

// Create User With Password Response
message CreateUserWithPasswordResponse {
    User user = 1;
}

// Update User Request
message UpdateUserRequest {
    string id = 1;
    string name = 2;
    string email = 3;
}

// Update User Response
message UpdateUserResponse {
    User user = 1;
}

// Update User Password Request
message UpdateUserPasswordRequest {
    string id = 1;
    string current_password = 2;
    string new_password = 3;
}

// Update User Password Response
message UpdateUserPasswordResponse {
    bool success = 1;
}

// Verify User Password Request
message VerifyUserPasswordRequest {
    string email = 1;
    string password = 2;
}

// Verify User Password Response
message VerifyUserPasswordResponse {
    bool valid = 1;
    User user = 2;  // Only populated if password is valid
}

// Delete User Request
message DeleteUserRequest {
    string id = 1;
}

// Delete User Response
message DeleteUserResponse {
    string id = 1;
}

// List Users Request
message ListUsersRequest {
    int32 page = 1;
    int32 limit = 2;
}

// List Users Response
message ListUsersResponse {
    repeated User users = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
}

// User Message (public information only - no password)
message User {
  string id = 1;
  string name = 2;
  string email = 3;
  string created_at = 4;
  string updated_at = 5;
}
